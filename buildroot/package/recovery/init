#!/bin/sh
#
# Recovery init script
#

# Standard busybox init
/bin/mount -t proc proc /proc
/bin/mount -o remount,rw,noatime /
/bin/mount -t sysfs sysfs /sys
/bin/mount -t devtmpfs dev /dev
/bin/hostname -F /etc/hostname

# Set up ACT LED to be triggered by mmc0
echo mmc0 > /sys/class/leds/led0/trigger

# Rescue shell available on tty2 and tty3
echo 2 >/sys/module/vt/parameters/cur_default
/sbin/getty -L tty2 0 vt100 &
/sbin/getty -L tty3 0 vt100 &
/sbin/getty -L ttyAMA0 115200 vt100 &

if grep -q vncinstall /proc/cmdline; then
    # VNC server mode. Mainly useful for making screenshots
    export QWS_DISPLAY="VNC:size=800x600:depth=32:0"

    while [ ! -e /sys/class/net/eth0 ]
    do
        echo "Waiting for eth0 to become ready..."
        sleep 1
    done

    ifup eth0
    IPADDR=`ifconfig | sed -n 's/.*inet addr:\([0-9.]\+\)\s.*/\1/p' | grep -v 127.0.0.1 | head -1`
    if [ -n "$IPADDR" ]; then
        echo
        echo Connect with your VNC client to $IPADDR
        echo or remove \'vncinstall\' from recovery.cmdline to disable this mode
        echo
    else
        echo
        echo Error obtaining IP-address using DHCP
        echo Unable to offer VNC service. Remove \'vncinstall\' from recovery.cmdline for normal installation.
        echo
    fi
fi

# Mouse acceleration
#export QWS_MOUSE_PROTO=:accel=1

SAFE_MODE=`vcgencmd get_config safe_mode_gpio`

if ( [ ${SAFE_MODE#*=} -eq 1 ] && ! grep -q disablesafemode /proc/cmdline ) || grep -q rescueshell /proc/cmdline; then
    sh
else
    RUN_INSTALLER=
    GPIO_TRIGGER=
    KEYBOARD_NO_TRIGGER=
    FORCE_TRIGGER=
    DEFAULT_LANG=
    DEFAULT_KBD=
    DEFAULT_DISPLAY=
    DEFAULT_PARTITION=

    if grep -q runinstaller /proc/cmdline; then
        RUN_INSTALLER=-runinstaller
    fi
    if grep -q gpiotriggerenable /proc/cmdline; then
        GPIO_TRIGGER=-gpiotriggerenable
    fi
    if grep -q keyboardtriggerdisable /proc/cmdline; then
        KEYBOARD_NO_TRIGGER=-keyboardtriggerdisable
    fi
    if grep -q forcetrigger /proc/cmdline; then
        FORCE_TRIGGER=-forcetrigger
    fi
    for p in `cat /proc/cmdline` ; do
        if [ "${p%%=*}" == "lang" ] ; then
            DEFAULT_LANG="-lang ${p#*=}";
        fi
        if [ "${p%%=*}" == "keyboard" ] ; then
            DEFAULT_KBD="-kbdlayout ${p#*=}";
        fi
        if [ "${p%%=*}" == "display" ] ; then
            DEFAULT_DISPLAY="-dispmode ${p#*=}"
        fi
        if [ "${p%%=*}" == "partition" ] ; then
            DEFAULT_PARTITION="-partition ${p#*=}"
        fi
    done

    /usr/bin/recovery $RUN_INSTALLER $GPIO_TRIGGER $KEYBOARD_NO_TRIGGER $FORCE_TRIGGER $DEFAULT_KBD $DEFAULT_LANG $DEFAULT_DISPLAY $DEFAULT_PARTITION -qws 2>/tmp/debug

fi

# Recovery should have rebooted

echo Recovery application crashed
echo Starting shell
sh
